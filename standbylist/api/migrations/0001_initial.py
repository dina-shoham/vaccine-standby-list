# Generated by Django 3.1.5 on 2021-01-30 15:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100, verbose_name='Street Address')),
                ('city', models.CharField(max_length=30, verbose_name='City')),
                ('postalCode', models.CharField(max_length=6, verbose_name='Postal Code')),
                ('province', models.CharField(choices=[('Alberta', 'Alberta'), ('British Columbia', 'British Columbia'), ('Manitoba', 'Manitoba'), ('New Brunswick', 'New Brunswick'), ('Newfoundland and Labrador', 'Newfoundland and Labrador'), ('Northwest Territories', 'Northwest Territories'), ('Nova Scotia', 'Nova Scotia'), ('Nunavut', 'Nunavut'), ('Ontario', 'Ontario'), ('Prince Edward Island', 'Prince Edward Island'), ('Quebec', 'Quebec'), ('Saskatchewan', 'Saskatchewan'), ('Yukon', 'Yukon')], max_length=255)),
                ('lat', models.FloatField(verbose_name='latitude')),
                ('lon', models.FloatField(verbose_name='longitude')),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(verbose_name='latitude')),
                ('lon', models.FloatField(verbose_name='longitude')),
                ('name', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveIntegerField()),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(max_length=255)),
                ('phoneNumber', models.CharField(max_length=10)),
                ('email', models.CharField(max_length=255)),
                ('vaccinationStatus', models.CharField(choices=[('0D', 'No doses'), ('1D', 'One dose'), ('2D', 'Two doses')], default='0D', max_length=2)),
                ('notificationStatus', models.CharField(choices=[('Unnotified', 'Unnotified'), ('Notified', 'Notified'), ('Confirmed', 'Confirmed'), ('Declined', 'Declined'), ('Timed out', 'Timed out'), ('Vaccinated', 'Vaccinated')], default='Unnotified', max_length=255)),
                ('occupation', models.CharField(choices=[('Tier 1', 'Tier 1'), ('Tier 2', 'Tier 2'), ('Tier 3', 'Tier 3'), ('Tier 4', 'Tier 4')], max_length=255)),
                ('transport', models.CharField(choices=[('Car', 'Car'), ('Public transit', 'Public transit'), ('Walk', 'Walk'), ('Bike', 'Bike'), ('Other', 'Other')], max_length=255)),
                ('highRiskHousehold', models.BooleanField()),
                ('healthcareNum', models.CharField(max_length=255, unique=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.clinic')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('open', 'Open'), ('confirmed', 'Confirmed'), ('finished', 'Finished')], default='open', max_length=255)),
                ('time', models.TimeField()),
                ('date', models.DateField(auto_now_add=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.clinic')),
            ],
        ),
    ]
